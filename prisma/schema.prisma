// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  relationMode = "prisma"
}

model Server {
  id Int @id @default(autoincrement())
  users User[]
  results Result[]
}


enum MemberRole {
  ADMIN
  GUEST
}

model User {
  serverid Int
  server Server @relation(fields: [serverid], references: [id])

  id String @id @default(uuid())
  username String
  userId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role MemberRole @default(GUEST)
  
  results Result[] @relation("UserResults")

  @@unique([serverid, username]) // 같은 서버 내에서만 유니크
  @@index([serverid])
}

model Level {
  id Int @id @default(autoincrement())
  name String @unique
  results Result[] @relation("LevelResults")
}


model Result {
  id String @id @default(uuid())
  userId String

  levelId Int
  completionTime Int //수행시간
  achievedAt DateTime @default(now())

  serverId Int

  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [userId], onDelete: Cascade, name:"UserResults")
  level Level @relation(fields: [levelId], references: [id],  onDelete: Cascade, name:"LevelResults")

  @@unique([serverId, userId, levelId])
  @@index([serverId, userId, levelId]) //복합 인덱스
  @@index([serverId])
  @@index([userId])
  @@index([levelId])
}